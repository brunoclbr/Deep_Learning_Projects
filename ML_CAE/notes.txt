Things to learn:

    - embedding of ML models to real life problems. Maintainance and updates.
    - using TensorBoard and Weights & Biases MLOPs
    - benefits of using Pytorch and maybe learning it

Notes on Hodges Book:

Chapter 3: Problem definition and CAE thinking

Garbage in gargabe out. Think about meaningful parameters and variables for modeling (CAE/CFD) as
well as for build your ML model BEFOREHAND. What do I want to achieve? Are my knowledge (priors) and 
expectations (outcomes) realistic/related? Keeping this in mind will help to evaluate the outcomes
more realistically/efficiently. CFD/CAE expertes need to complement Data Engineers and vice-versa. 
2 approaches on how many data: Adaptive sampling method and as many samples as twice the #columns + 50.
How to structure your CAE data for feeding an ML model and many average experienced people overcome a 
few good experts.